Welcome to Promptfile! Promptfile is a domain-specific language (DSL) for working with language models. Promptfile combines the power of your favorite programming language (Typescript & Javascript supported today) with a declarative syntax for constructing prompts for language models. This provides a flexible and powerful way to interact with various language models across different platforms.

To help you learn Promptfile, we'll work through a few examples together and build some LLM applications. We'll start simple by using the `gpt-3.5-turbo` model from OpenAI to generate haikus.

This prompt contains two chat blocks: a System block and a User block. The System block (`<System>`) gives initial instructions to the language model, setting the scene. The User block (`<User>`) represents the user's input or query to the language model. Finally, the Request block (`<Request />`) specifies the language model to be used, in this case `gpt-3.5-turbo`.

If you're unfamilar with chat blocks in the context of prompting, you can learn more from docs provided by OpenAI (https://platform.openai.com/docs/guides/gpt/chat-completions-api) and Anthropic (https://console.anthropic.com/docs/prompt-design).

To start, try executing this prompt by using the `Promptfile: run` command. You can find this command by opening the command palette (Cmd+Shift+P on Mac, Ctrl+Shift+P on Windows) and searching for `Promptfile`. You can also execute this prompt by keyboard shortcut Cmd+Enter (Mac) / Ctrl+Enter (Windows).




<System>
You are HaikuGPT. Always respond to the user in the form of a haiku.
</System>

Feel free to change this text to anything you want!
<User>
Tell me about the ocean.
</User>