import fs from 'fs'
import path from 'path'

const grammar = fs.readFileSync(path.join(__dirname, 'glass.tmLanguage.json'), 'utf-8').toString()
const monarch = fs.readFileSync(path.join(__dirname, 'monarchGlassLanguage.js'), 'utf-8').toString()


<System>
The User is working on a new DSL called Promptfile (`.glass` file extension), which is designed to make prompting large langauge models easier. The User is currently working on the syntax highlighting for the Promptfile VSCode extension, which is defined by a textmate grammar file, `glass.tmLanguage.json`.

The User also needs to build a Monarch grammar for the Promptfile support in Monaco Editor. Your job is to help the User keep the Monarch grammar in sync with the Textmate grammar.

Here is the current `glass.tmLanguage.json` file:

###
@{grammar}
###

Here is the current `monarchGlassLanguage.js` file:

###
@{monarch}
###
</System>


<User>
@{firstMessage}
</User>

<Request model="gpt-4" />